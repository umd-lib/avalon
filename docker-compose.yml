version: '3.4'

volumes:
  streaming:
  database:
  fedora:
  solr:
  npms:
  work:

networks:
  internal:
  external:

services:
  db: &db-avalon
    image: postgres:14-alpine
    volumes:
      - database:/data
    environment:
      - PGDATA=/data
      - POSTGRES_USER=postgres
      - POSTGRES_DB=avalon
      - POSTGRES_PASSWORD=password
    networks:
      internal:
  db-test:
    <<: *db-avalon
    volumes: []

  fedora: &fedora
    image: docker.lib.umd.edu/fedora:4.7.5-avalon-7.5.1
    depends_on:
      - db
    volumes:
      - fedora:/data
    environment:
      - JAVA_OPTIONS=-Dfcrepo.modeshape.configuration=classpath:/config/file-simple/repository.json -Dfcrepo.home=/data
    networks:
      internal:
  fedora-test:
    <<: *fedora
    volumes: []

  solr: &solr
    image: docker.lib.umd.edu/solr:avalon-7.5.1
    volumes:
      - ./solr/conf:/opt/solr/avalon_conf
      - solr:/var/solr
    command:
      - solr-precreate
      - avalon
      - /opt/solr/avalon_conf
    networks:
      internal:
  solr-test:
    <<: *solr
    volumes:
      - ./solr/conf:/opt/solr/avalon_conf

  hls:
    image: docker.lib.umd.edu/nginx:avalon-7.5.1-umd-1
    environment:
      - AVALON_DOMAIN=http://avalon:3000
    volumes:
      - streaming:/data
    ports:
      - '8880:80'
    networks:
      external:

  redis: &redis
    image: redis:alpine
    networks:
      internal:
  redis-test:
    <<: *redis

  avalon: &avalon
    image: docker.lib.umd.edu/avalon:7.5.1-umd-1
    build:
      context: .
      target: dev
    command: bash -c "/docker_init.sh && bundle exec rails server -b 0.0.0.0"
    depends_on:
      - db
      - fedora
      - solr
      - redis
      - hls
    environment:
      - APP_NAME=avalon
      - SETTINGS__DOMAIN=http://av-local:3000
      - BUNDLE_FLAGS=--with development postgres --without production test
      - ENCODE_WORK_DIR=/streamfiles
      - CONTROLLED_VOCABULARY=config/controlled_vocabulary.yml
      - DATABASE_URL=postgres://postgres:password@db/avalon
      - DIGITAL_COLLECTIONS_URL=https://digital.lib.umd.edu/
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
      - FEDORA_NAMESPACE=avalon
      - FEDORA_URL=http://fedoraAdmin:fedoraAdmin@fedora:8080/fedora/rest
      - RAILS_ENV=development
      - RAILS_ADDITIONAL_HOSTS=avalon
      - SETTINGS__REDIS__HOST=redis
      - SETTINGS__REDIS__PORT=6379
      - SECRET_KEY_BASE=abcd
      - SOLR_URL=http://solr:8983/solr/avalon
      - SETTINGS__STREAMING__CONTENT_PATH=/streamfiles
      - SETTINGS__FFMPEG__PATH=/usr/bin/ffmpeg
      - SETTINGS__STREAMING__STREAM_DEFAULT_QUALITY=medium
      - SETTINGS__STREAMING__HTTP_BASE=http://localhost:8880/avalon
      - SETTINGS__STREAMING__SERVER=nginx
      - SETTINGS__STREAMING__STREAM_TOKEN_TTL=20
      - SYSTEM_GROUPS=administrator,group_manager,manager
      - SAML_ISSUER=av-local:3000
      - UMD_HANDLE_PREFIX=1903.1
      - UMD_HANDLE_REPO=avalon
    volumes:
      - .:/home/app/avalon
      - ./masterfiles:/masterfiles
      - streaming:/streamfiles
      - npms:/home/app/avalon/node_modules
    ports:
      - '3000:3000'
    networks:
      internal:
      external:
    stdin_open: true
    tty: true

  test:
    <<: *avalon
    command: >
      bash -c "/docker_init.sh && tail -f /dev/null"
    depends_on:
      - db-test
      - fedora-test
      - solr-test
      - redis-test
    environment:
      - DATABASE_URL=postgresql://postgres:password@db-test/avalon
      - DIGITAL_COLLECTIONS_URL=https://digital-test.lib.umd.edu/
      - SETTINGS__FFMPEG__PATH=/usr/bin/ffmpeg
      - SETTINGS__REDIS__HOST=redis-test
      - SETTINGS__REDIS__PORT=6379
      - FEDORA_URL=http://fedora-test:8080/fedora/rest
      - SOLR_URL=http://solr-test:8983/solr/avalon
      - RAILS_ENV=test
      - BUNDLE_FLAGS=--with aws test postgres --without production
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
    ports: []

  worker:
    <<: *avalon
    command: dumb-init -- bash -c "bundle install && bundle exec sidekiq -C config/sidekiq.yml"
    ports: []

  # minio:
  #   image: minio/minio:RELEASE.2019-10-12T01-39-57Z
  #   command: minio server /data
  #   environment:
  #     MINIO_ACCESS_KEY: minio
  #     MINIO_SECRET_KEY: minio123
  #   volumes:
  #     - data:/data
  #   ports:
  #     - 9000:9000
  #   networks:
  #     internal:
  #     external:
  #   healthcheck:
  #     test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3

  # createbuckets:
  #   image: minio/mc
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c "
  #     /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
  #     /usr/bin/mc mb -p myminio/fcrepo myminio/masterfiles myminio/derivatives myminio/supplementalfiles;
  #     /usr/bin/mc policy set download myminio/derivatives;
  #     /usr/bin/mc policy set download myminio/supplementalfiles;
  #     exit 0;
  #     "
  #   networks:
  #     internal:

  cypress:
    network_mode: host
    image: cypress/included:3.8.2
    depends_on:
      - avalon
    entrypoint: cypress run -C spec/cypress/cypress.json
    working_dir: /e2e
    volumes:
      - ./:/e2e
      - npms:/e2e/node_modules

  # UMD Customization
  # Nginx server configuration for supporting HTTPS connections from the
  # local development environment
  nginx:
    image: nginx:1.25.2
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./docker/nginx/certs:/etc/nginx/certs:ro
    networks:
      internal:
      external:
  # End UMD Customization
